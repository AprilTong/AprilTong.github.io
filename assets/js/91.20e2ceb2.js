(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{499:function(t,s,e){"use strict";e.r(s);var r=e(2),a=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"vue-devtools-直接打开对应组件文件原理解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-devtools-直接打开对应组件文件原理解析"}},[t._v("#")]),t._v(" vue-devtools 直接打开对应组件文件原理解析")]),t._v(" "),s("h3",{attrs:{id:"原理总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理总结"}},[t._v("#")]),t._v(" 原理总结")]),t._v(" "),s("p",[t._v("如图所示，我们可以在终端执行"),s("strong",[t._v("code path/to/file")]),t._v("在"),s("strong",[t._v("vscode")]),t._v("中打开对应的文件，vue-devtools 也是一样，利用了 nodejs 中的 child_process，执行了类似命令，然后对应编辑器就打开了相应的文件。\n"),s("img",{attrs:{src:"https://raw.githubusercontent.com/AprilTong/image/master/code.gif",alt:"效果"}})]),t._v(" "),s("h3",{attrs:{id:"学习过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习过程"}},[t._v("#")]),t._v(" 学习过程")]),t._v(" "),s("p",[t._v("基本按照"),s("a",{attrs:{href:"https://juejin.cn/post/6959348263547830280",target:"_blank",rel:"noopener noreferrer"}},[t._v("若川大佬的文章"),s("OutboundLink")],1),t._v("一步一步操作下来，都没什么问题。其中印象很深的的一步是，要给"),s("strong",[t._v("launch")]),t._v("方法添加断点，不知道怎么操作，之前都是写"),s("strong",[t._v("debugger")]),t._v("在浏览器中打断点调试，后来发现代右击当前行代码前面的行数就可以。\n"),s("img",{attrs:{src:"https://raw.githubusercontent.com/AprilTong/image/master/20240815182725.png",alt:"如图所示"}})]),t._v(" "),s("h3",{attrs:{id:"学习收获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习收获"}},[t._v("#")]),t._v(" 学习收获")]),t._v(" "),s("ol",[s("li",[t._v("了解了在 vscode 中如何调试源码，第一次接触，之前都是在 chrome 中")]),t._v(" "),s("li",[t._v("对 vue-devtools 打开源文件有了更好的理解")]),t._v(" "),s("li",[t._v("对 node 相关的 api 有了了解")]),t._v(" "),s("li",[t._v("才知道 mac 系统中的操作系统是"),s("strong",[t._v("darwin")]),t._v("😂")])]),t._v(" "),s("h3",{attrs:{id:"node-相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-相关"}},[t._v("#")]),t._v(" node 相关")]),t._v(" "),s("ol",[s("li",[t._v("fs.existsSync() 用于检查指定的路径（文件或目录）是否存在")]),t._v(" "),s("li",[t._v("child_process 子进程模块\nchildProcess.execSync() 用于同步执行一个 shell 命令或脚本，并返回执行结果\nchildProcess.spawn() 用于异步地创建子进程以执行命令或启动新进程，spawn() 不会缓冲子进程的输出数据，因此适合处理大量数据或需要持续交互的场景。")]),t._v(" "),s("li",[t._v("path 路径\npath.basename() 返回 path 的最后一部分\npath.relative(from, to) 方法根据当前工作目录返回从 from 到 to 的相对路径。")]),t._v(" "),s("li",[t._v("process.cwd() 返回是当前 Node.js 进程执行时的工作目录")])])])}),[],!1,null,null,null);s.default=a.exports}}]);