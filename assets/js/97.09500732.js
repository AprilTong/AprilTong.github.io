(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{502:function(s,a,t){"use strict";t.r(a);var n=t(2),r=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("公司使用 gitlab 作为代码管理工具，那么如何实现自动化构建部署项目呢？")]),s._v(" "),a("h2",{attrs:{id:"方法一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一"}},[s._v("#")]),s._v(" 方法一")]),s._v(" "),a("p",[s._v("jenkins 部署。"),a("a",{attrs:{href:"https://juejin.cn/post/7102360505313918983",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考文章"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"方法二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法二"}},[s._v("#")]),s._v(" 方法二")]),s._v(" "),a("p",[s._v("gitlab-runner")]),s._v(" "),a("h2",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[s._v("#")]),s._v(" 实现")]),s._v(" "),a("p",[s._v("公司部署 jenkins 的服务器挂的频率有点高，所以采用方法二。")]),s._v(" "),a("ol",[a("li",[s._v("安装 runner，根据不同平台去配置")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/AprilTong/image/master/20230707144212.png",alt:"点击此处查看"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/AprilTong/image/master/20230707144527.png",alt:"不同平台"}})]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("根据项目的 token 注册 runner")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gitlab-runner register "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--url")]),s._v(" http://XXX --registration-token XXX\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/AprilTong/image/master/20230707143642.png",alt:"查看url和token"}})]),s._v(" "),a("p",[s._v("注册需要输入 url、token、tag 等。")]),s._v(" "),a("p",[s._v("可通过以下命令查看是否注册成功。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gitlab-runner list\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/AprilTong/image/master/202307071448710.png",alt:"查看注册列表"}})]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("在项目根目录下创建.gitlab-ci.yml 文件")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("stages:\n  - build\n\nbuild-job:\n  tags:\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("  // 需要和你注册runner时输入的tag一致\n  stage: build\n  only:\n    - master // 构建分支\n  variables:\n    expire_in: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" week\n  cache:\n    paths:\n      - repository\n  script:\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"前端开始打包..."')]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" run build\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"==打包测试完成=="')]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" XXX/*  // XXX为部署的目录路径\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" dist/*  XXXX  // XXX为部署的目录路径\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"==文件复制完成=="')]),s._v("\n  artifacts:\n    paths:\n      - packages/back/page\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("提交代码测试，在 CI/CD 列表中就可以看到了。\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/AprilTong/image/master/20230707145823.png",alt:""}})])]),s._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/mrxccc/p/16504726.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Gitlab Runner 的安装与配置"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);