(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{538:function(e,s,a){"use strict";a.r(s);var t=a(2),r=Object(t.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"本地存储-localstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地存储-localstorage"}},[e._v("#")]),e._v(" 本地存储 localstorage")]),e._v(" "),s("ul",[s("li",[e._v("localstorage 方法存储的数据没有时间限制，不清空浏览器缓存都可以使用")]),e._v(" "),s("li",[e._v("用法&存储：")])]),e._v(" "),s("ol",[s("li",[e._v("点(.)运算符： localstorage.userName = 'april'")]),e._v(" "),s("li",[e._v("方括号([])运算符: localstorage['userName'] = 'april'")]),e._v(" "),s("li",[e._v('localStorage.setItem: localStorage.setItem("userName", "april")')])]),e._v(" "),s("ul",[s("li",[e._v("用法&读取：")])]),e._v(" "),s("ol",[s("li",[e._v("点(.)运算符： localstorage.userName")]),e._v(" "),s("li",[e._v("方括号([])运算符: localstorage['userName']")]),e._v(" "),s("li",[e._v('localStorage.getItem: localStorage.getItem("userName")')])]),e._v(" "),s("h2",{attrs:{id:"本地存储-sessionstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地存储-sessionstorage"}},[e._v("#")]),e._v(" 本地存储 sessionStorage")]),e._v(" "),s("ul",[s("li",[e._v("sessionStorage 方法针对一个会话进行数据存储，"),s("strong",[e._v("当用户关闭浏览器窗口后，数据会被删除")])]),e._v(" "),s("li",[e._v("用法&存储：")])]),e._v(" "),s("ol",[s("li",[e._v("点(.)运算符： sessionStorage .userName = 'april'")]),e._v(" "),s("li",[e._v("方括号([])运算符: sessionStorage ['userName'] = 'april'")]),e._v(" "),s("li",[e._v('sessionStorage .setItem: sessionStorage .setItem("userName", "april")')])]),e._v(" "),s("ul",[s("li",[e._v("用法&读取：")])]),e._v(" "),s("ol",[s("li",[e._v("点(.)运算符： sessionStorage .userName")]),e._v(" "),s("li",[e._v("方括号([])运算符: sessionStorage ['userName']")]),e._v(" "),s("li",[e._v('sessionStorage .getItem: sessionStorage .getItem("userName")')])]),e._v(" "),s("h2",{attrs:{id:"vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[e._v("#")]),e._v(" vuex")]),e._v(" "),s("ul",[s("li",[e._v("vuex 是专为 vue.js 应用程序开发的状态管理模式，采用集中式存储应用的所有组件的状态，并以相应的规则保证状态 1⃣️ 一种可 1⃣ 预测的方式发生变化。")]),e._v(" "),s("li",[e._v("使用: "),s("a",{attrs:{href:"https://vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[e._v("#")]),e._v(" 最后")]),e._v(" "),s("p",[e._v("1.区别：vuex 存储在"),s("strong",[e._v("内存")]),e._v("，localstorage（本地存储）则以"),s("strong",[e._v("文件")]),e._v("的方式存储在本地(电脑的磁盘),永久保存；sessionstorage( 会话存储 ) ,临时保存。localStorage 和 sessionStorage 只能存储字符串类型，对于复杂的对象可以使用 ECMAScript 提供的 JSON.stringify(obj)将其转成字符串，取出来时使用 JSON.parse(str)重新转成对象, 存储数字类型的也会变字符串")]),e._v(" "),s("p",[e._v("2.应用场景：vuex 用于组件之间的传值(响应式的)，localstorage，sessionstorage 则主要用于不同页面之间的传值。")]),e._v(" "),s("p",[e._v("3.永久性：当刷新页面（这里的刷新页面指的是 --\x3e F5 刷新,属于清除内存了）时 vuex 存储的值会丢失，sessionstorage 页面关闭后就清除掉了，localstorage 不会。")])])}),[],!1,null,null,null);s.default=r.exports}}]);